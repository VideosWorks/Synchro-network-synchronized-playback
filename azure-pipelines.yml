trigger:
- master

jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:

  - bash: choco install jom -y
    displayName: 'Install jom'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.2' 
      addToPath: true 
      architecture: 'x64'

  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://pastebin.com/raw/kaFPjncm -OutFile qt-installer-noninteractive.qs
      Invoke-WebRequest https://download.qt.io/official_releases/qt/5.11/5.11.3/qt-opensource-windows-x86-5.11.3.exe -OutFile qt-opensource-windows-x86-5.11.3.exe
      .\qt-opensource-windows-x86-5.11.3.exe --script qt-installer-noninteractive.qs --verbose
    displayName: 'Install Qt 5.11.3'

  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://mpv.srsfckn.biz/mpv-dev-20181002.7z -OutFile mpv-dev-20181002.7z
      
      & "$env:ProgramFiles\7-Zip\7z.exe" x mpv-dev-20181002.7z -y -ompv

      $oldfile = Get-Content mpv\x86_64\libmpv.def
      Set-Content mpv\x86_64\libmpv.def  -value "LIBRARY MPV-1`nEXPORTS`n", $oldfile
    displayName: 'Download libmpv'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd mpv\x86_64
      lib /def:libmpv.def /name:mpv-1.dll /out:libmpv.dll.lib /MACHINE:X64
    displayName: 'Build libmpv'
    
  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      %userprofile%\Qt\5.11.3\msvc2017_64\bin\qmake.exe
      jom /j 2
      %userprofile%\Qt\5.11.3\msvc2017_64\bin\windeployqt.exe bin
    displayName: 'Build synchro'

  - task: CopyFiles@2
    inputs:
      sourceFolder: bin
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy build artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'Synchro-Win64-$(Build.BuildNumber)'
    displayName: 'Publish build artifacts'

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: brew install qt pkg-config mpv
    displayName: 'Install Qt and mpv'

  - script: |
      $(brew --prefix qt)/bin/qmake
      make
      $(brew --prefix qt)/bin/macdeployqt bin/Synchro.app
    displayName: 'Build synchro'

  - task: CopyFiles@2
    inputs:
      sourceFolder: bin
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy build artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'Synchro-macOS-$(Build.BuildNumber)'
    displayName: 'Publish build artifacts'

- job: Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      wget -O qt-installer-noninteractive.qs https://pastebin.com/raw/nXrQLStE
      wget http://download.qt.io/official_releases/qt/5.9/5.9.2/qt-opensource-linux-x64-5.9.2.run
      chmod +x qt-opensource-linux-x64-5.9.2.run
      ./qt-opensource-linux-x64-5.9.2.run -platform minimal --script qt-installer-noninteractive.qs --verbose
    displayName: 'Install Qt 5.9.2'

  - script: |
      sudo apt-get -y update
      sudo apt-get -y install libfribidi-dev yasm nasm libvdpau1
      git clone https://github.com/mpv-player/mpv-build.git
      cd mpv-build
      ./use-mpv-release
      ./use-ffmpeg-release
      echo --enable-libmpv-shared > mpv_options
      ./rebuild -j2
      sudo ./install
      cd ../
    displayName: 'Install mpv'

  - script: |
      ~/Qt/5.9.2/gcc_64/bin/qmake
      make
    displayName: 'Build synchro'

  - task: CopyFiles@2
    inputs:
      sourceFolder: bin
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy build artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'Synchro-Linux64-$(Build.BuildNumber)'
    displayName: 'Publish build artifacts'
