trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      wget -O qt-installer-noninteractive.qs https://pastebin.com/raw/nXrQLStE
      wget http://download.qt.io/official_releases/qt/5.11/5.11.3/qt-opensource-linux-x64-5.11.3.run
      chmod +x qt-opensource-linux-x64-5.11.3.run
      ./qt-opensource-linux-x64-5.11.3.run -platform minimal --script qt-installer-noninteractive.qs --verbose
    displayName: 'Install Qt 5.11.3'

  - script: |
      sudo apt-get -y update
      sudo apt-get -y install libfribidi-dev yasm nasm libvdpau1
      git clone https://github.com/mpv-player/mpv-build.git
      cd mpv-build
      ./use-mpv-release
      ./use-ffmpeg-release
      echo --enable-libmpv-shared > mpv_options
      ./rebuild -j2
      sudo ./install
      cd ../
    displayName: 'Install mpv'

  - script: |
      /home/vsts/Qt/5.11.3/gcc_64/bin/qmake
      make
      cp bin/* $(Build.ArtifactStagingDirectory)
    displayName: 'Build synchro'

  - task: CopyFiles@2
    inputs:
      sourceFolder: bin
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy build artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'Synchro-Linux64-$(Build.BuildNumber)'
    displayName: 'Publish build artifacts'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:

  - powershell: |
      cd $env:userprofile

      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://download.qt.io/official_releases/jom/jom.zip -OutFile jom.zip

      & "$env:ProgramFiles\7-Zip\7z.exe" x jom.zip -y
    displayName: 'Download jom'

  - bash: |
      git clone https://github.com/openssl/openssl.git
      cd openssl
      git checkout tags/OpenSSL_1_1_0j
    displayName: 'Download OpenSSL'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd openssl
      perl Configure VC-WIN64A no-shared threads --prefix=%userprofile%\openssl64 --openssldir=%userprofile%\openssl64
    displayName: 'Configure OpenSSL'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd openssl
      nmake
      nmake install
    displayName: 'Configure OpenSSL'

  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://download.qt.io/archive/qt/5.11/5.11.3/single/qt-everywhere-src-5.11.3.tar.xz -OutFile qt-everywhere-src-5.11.3.tar.xz

      & "$env:ProgramFiles\7-Zip\7z.exe" x qt-everywhere-src-5.11.3.tar.xz -y
      & "$env:ProgramFiles\7-Zip\7z.exe" x qt-everywhere-src-5.11.3.tar -y
    displayName: 'Download Qt'
    
  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd qt-everywhere-src-5.11.3
      configure -prefix %userprofile%\Qt -platform win32-msvc -static -ltcg -nomake examples -nomake tools -nomake tests -opengl dynamic -opensource -confirm-license -openssl-linked OPENSSL_LIBS="-llibssl -llibcrypto" -I %userprofile%\openssl64\include -L %userprofile%\openssl64\lib
    displayName: "Configure Qt"

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd qt-everywhere-src-5.11.3
      %userprofile%\jom /j 2
      nmake install
    displayName: "Build Qt"
    failOnStderr: false

  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://mpv.srsfckn.biz/mpv-dev-20181002.7z -OutFile mpv-dev-20181002.7z
      
      & "$env:ProgramFiles\7-Zip\7z.exe" x mpv-dev-20181002.7z -y -ompv

      $oldfile = Get-Content mpv\x86_64\libmpv.def
      $newstuff = 'LIBRARY MPV-1`nEXPORTS`n`n'
      Set-Content mpv\x86_64\libmpv.def  -value $newstuff, $oldfile
    displayName: 'Download mpv lib'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      lib /def:mpv\x86_64\libmpv.def /name:mpv\x86_64\mpv-1.dll /out:mpv\x86_64\libmpv.lib /MACHINE:X64
    displayName: 'Build mpv lib'
    
  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      "%userprofile%\Qt\bin\qmake.exe"
      %userprofile%\jom.exe /j 2
    displayName: 'Build synchro'

  - task: CopyFiles@2
    inputs:
      sourceFolder: bin
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy build artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'Synchro-Win64-$(Build.BuildNumber)'
    displayName: 'Publish build artifacts'