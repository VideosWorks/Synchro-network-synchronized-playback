trigger:
- master

jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - checkout: self
    lfs: true

  - powershell: |
      cd ~
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://dl.dropboxusercontent.com/s/8ur5xp7cbfjp86f/msvc2017_64.7z -OutFile qt.7z
      & "$env:ProgramFiles\7-Zip\7z.exe" x qt.7z -y -oQt
    displayName: 'Download Qt'

  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest https://mpv.srsfckn.biz/mpv-dev-20181002.7z -OutFile mpv-dev-20181002.7z
      
      & "$env:ProgramFiles\7-Zip\7z.exe" x mpv-dev-20181002.7z -y -ompv

      $oldfile = Get-Content mpv\x86_64\libmpv.def
      Set-Content mpv\x86_64\libmpv.def  -value "LIBRARY MPV-1`nEXPORTS`n", $oldfile
    displayName: 'Download mpv dev archive'

  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cd mpv\x86_64
      lib /def:libmpv.def /name:mpv-1.dll /out:libmpv.lib /MACHINE:X64
    displayName: 'Generate mpv libraries'
    
  - script: |
      call "%programfiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set Qt5_DIR=%userprofile%\Qt\msvc2017_64
      cmake . -A x64
      msbuild Synchro.sln /p:Configuration=Release /m
    displayName: 'Build Synchro'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'Release'
      artifactName: 'Synchro-exe64-$(Build.BuildNumber)'
    displayName: 'Publish exe as build artifact'

  - script: |
      %userprofile%\Qt\msvc2017_64\bin\windeployqt.exe Release --no-compiler-runtime --qmldir %userprofile%\Qt\msvc2017_64\qml
      (robocopy %userprofile%\Qt\msvc2017_64\qml\Qt\labs\platform Release\Qt\labs\platform /E) ^& IF %ERRORLEVEL% LSS 8 SET ERRORLEVEL = 0
      (robocopy mpv\x86_64\ Release\ mpv-1.dll) ^& IF %ERRORLEVEL% LSS 8 SET ERRORLEVEL = 0
    displayName: 'Deploy Synchro'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'Release'
      artifactName: 'Synchro-Win64-$(Build.BuildNumber)'
    displayName: 'Publish exe and libraries as build artifacts'

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - checkout: self
    lfs: true

  - script: brew install qt pkg-config mpv cmake
    displayName: 'Install required homebrew packages'

  - script: |
      export Qt5_DIR=$(brew --prefix qt)/lib/cmake/Qt5
      cmake .
      make
      mkdir bin
      cp -r Synchro.app bin/
      $(brew --prefix qt)/bin/macdeployqt bin/Synchro.app -qmldir=$(brew --prefix qt)/qml/
    displayName: 'Build Synchro'

  - script: |
      cp -r $(brew --prefix qt)/qml/Qt/labs/platform bin/Synchro.app/Contents/Resources/qml/Qt/labs/platform
      cd bin/Synchro.app/Contents/Resources/qml/Qt/labs/platform/
      qtvers=$(echo $(brew info --json=v1 qt | jq .[].versions.stable) | sed -e 's/^"//' -e 's/"$//')
      install_name_tool -id libqtlabsplatformplugin.dylib libqtlabsplatformplugin.dylib
      install_name_tool -change /usr/local/Cellar/qt/$qtvers/lib/QtQuick.framework/Versions/5/QtQuick @rpath/QtQuick.framework/Versions/5/QtQuick libqtlabsplatformplugin.dylib
      install_name_tool -change /usr/local/Cellar/qt/$qtvers/lib/QtWidgets.framework/Versions/5/QtWidgets @rpath/QtWidgets.framework/Versions/5/QtWidgets libqtlabsplatformplugin.dylib
      install_name_tool -change /usr/local/Cellar/qt/$qtvers/lib/QtGui.framework/Versions/5/QtGui @rpath/QtGui.framework/Versions/5/QtGui libqtlabsplatformplugin.dylib
      install_name_tool -change /usr/local/Cellar/qt/$qtvers/lib/QtQml.framework/Versions/5/QtQml @rpath/QtQml.framework/Versions/5/QtQml libqtlabsplatformplugin.dylib
      install_name_tool -change /usr/local/Cellar/qt/$qtvers/lib/QtNetwork.framework/Versions/5/QtNetwork @rpath/QtNetwork.framework/Versions/5/QtNetwork libqtlabsplatformplugin.dylib
      install_name_tool -change /usr/local/Cellar/qt/$qtvers/lib/QtCore.framework/Versions/5/QtCore @rpath/QtCore.framework/Versions/5/QtCore libqtlabsplatformplugin.dylib
    displayName: 'Add qt labs platform plugin and change dylib install names'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$bin'
      artifactName: 'Synchro-macOS-$(Build.BuildNumber)'
    displayName: 'Publish .app as build artifact'